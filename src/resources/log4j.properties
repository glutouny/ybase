#####配置根元素
#调试模式，写成DEBUG  ---设置日志级别-存储DEBUG以及以上级别的记录
log4j.rootLogger=DEBUG,console,file,error
#生产级项目,写成INFO就可以了
#INFO级别比DEBUG级别高 ---console,file,error都是自己写的-名称自己定

####以下配置输出到控制台的配置####
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.Target=System.out
log4j.appender.console.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss} [%l] -> %m [%t] [chx]%n


### 输出到日志文件 ###
log4j.appender.file=org.apache.log4j.RollingFileAppender
#。RollingFileAppender按log文件最大长度限度生成新文件
#以下是具体的目录
log4j.appender.file.File= ../logs/info/info.log
#每个文件的最大大小
log4j.appender.file.MaxFileSize=5MB
#最多可以是多少个文件
log4j.appender.file.MaxBackupIndex=30
## 输出INFO级别以上的日志 --Threshold是个全局的过滤器，它将把低于所设置的INFO的信息过滤不显示出来。
log4j.appender.file.Threshold=DEBUG
#服务器启动日志是追加， false：服务器启动后会生成日志文件把老的覆盖掉
log4j.appender.file.Append = true
#信息的布局格式-按指定的格式打出
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#具体的布局格式 - %d为时间
#log4j.appender.file.layout.ConversionPattern=%d %p [%c] %m %l %n
log4j.appender.file.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss} [%l] -> %m [%t] [chx]%n
#设置输出日志文件编码（可以控制乱码情况）
log4j.appender.file.encoding=UTF-8


# Configure logging for testing: optionally with log file
log4j.rootLogger=WARN, stdout
# log4j.rootLogger=WARN, stdout, logfile

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

log4j.appender.logfile=org.apache.log4j.FileAppender
log4j.appender.logfile.File=target/spring.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n