<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!--读取配置文件-->
    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>

    <!--从配置文件中获取数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置Jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="shiroDao" class="com.yl.shiro_web.daos.impl.ShiroDaoImpl">
    </bean>
    <bean id="shiroService" class="com.yl.shiro_web.services.impl.DefaultShiroService">
    </bean>
    <bean id="myShiroRealm" class="com.yl.shiro_web.util.MyShiroRealm">
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myShiroRealm"/>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--去登录的地址-->
        <property name="loginUrl" value="/gologin.jsp"/>
        <!--登录成功的跳转地址-->
        <property name="successUrl" value="/index.jsp"/>
        <!--验证失败的跳转地址-->
        <property name="unauthorizedUrl" value="/error.jsp"/>
        <!--定义过滤的规则-->

        <!--复杂的系统中，url和权限都可以从数据库中读取-->
        <!--anon是不需要验证，authc时需要验证，perms[admin]代表要admin权限-->
        <property name="filterChainDefinitions">
            <value>
                /gologin = anon
                /login = anon
                /doadd = authc, perms[perm1,perm2]
                /doget = authc, perms[admin]
                /doupdate = authc, perms[perm1]
                /dodel = authc, perms[perm2]
            </value>
        </property>
    </bean>
</beans>